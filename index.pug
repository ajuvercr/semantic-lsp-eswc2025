doctype html
html
  head
    meta(charset="utf-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title Slides: Semantic Web Langauge Server
    link(rel="stylesheet", href="node_modules/@shower/ribbon/styles/styles.css")
    link(rel="stylesheet", href="./prism.css")
    link(rel="stylesheet", href="./local.css")
    style.
        .shower {
            --slide-ratio: calc(16 / 9);
        }
  body(class="shower list")
    header.caption
      h1 Semantic Web Language Server (SWLS)
      p Enhancing the Developer Experience for Semantic Web Practitioners

    section.slide.title
      h2 Semantic Web Language Server (SWLS)
      h4 Enhancing the Developer Experience for Semantic Web Practitioners
      div 
        | #[em Arthur Vercruysse], Julián Rojas Meléndez, Pieter Colpaert
        br 
        | Ghent University - imec - IDLab, Belgium

    section.slide
      h2 Table of contents
      ol
        li Context and Motivation
        li Demo
        li Implementation
        li Conclusion and Future Work

    section.slide
      h2 Table of contents
      ol
        li
           strong Context and Motivation
        li Demo
        li Implementation
        li Conclusion and Future Work

    section.slide
      h2 Context
      ul
        li Semantic Web comes in many forms: Turtle, SPARQL, etc
        li When editing Linked Data, a human error is quickly made
        li Thanks to best practices, the source of truth is often #[strong available] [1]
      p.footer [1]: #[a(href="https://lov.linkeddata.es/dataset/lov/") lov.linkeddata.es/dataset/lov/]

    section.slide
      h2 Motivation
      p Other tools exist but are limited
      ul
        li Focus on a #[strong single language], Yasgui [2]
        li Focus on a #[strong single dataset], #[a(href="https://query.wikidata.org/") query.wikidata.org]
        li Most lack local integrations
      p.footer [2]: #[a(href="https://yasgui.org/") yasgui.org/]

    section.slide.bg-inspirational
      .overlay
        blockquote.large What if writing RDF felt like writing code?
      small.footer.right Picture by Greg Rakozy
      figure
        image.cover(src="./images/inspirational.jpg")

    section.slide.bg-inspirational
      .overlay
        h1 We bring to you
          strong
            em The Semantic Web Language Server
      small.footer.right Picture by Greg Rakozy
      figure
        image.cover(src="./images/inspirational.jpg")

    section.slide
      h2 Table of contents
      ol
        li Context and Motivation
        li #[strong Demo]
        li Implementation
        li Conclusion and Future Work

    // each jpg in [ "1-empty.jpg", "2-me.jpg", "3-prefix.jpg", "4-prefix-complete.jpg", "5-type.jpg", "6-type-complete.jpg", "7-pred-1.jpg","8-pred-2.jpg","9-data-done.jpg","10-shape-1.jpg", "11-shape-prefix.jpg", "12-shape-type.jpg","14-shape-done.jpg","15-hover.jpg", "16-shape-valid.jpg"]
    each jpg in  ["mpv-shot0001.jpg","mpv-shot0002.jpg","mpv-shot0003.jpg","mpv-shot0004.jpg","mpv-shot0005.jpg","mpv-shot0006.jpg","mpv-shot0007.jpg","mpv-shot0008.jpg","mpv-shot0009.jpg","mpv-shot0010.jpg","mpv-shot0011.jpg","mpv-shot0012.jpg","mpv-shot0013.jpg","mpv-shot0014.jpg","mpv-shot0015.jpg","mpv-shot0016.jpg","mpv-shot0017.jpg","mpv-shot0018.jpg","mpv-shot0019.jpg","mpv-shot0020.jpg","mpv-shot0021.jpg","mpv-shot0022.jpg","mpv-shot0023.jpg","mpv-shot0024.jpg","mpv-shot0025.jpg","mpv-shot0026.jpg","mpv-shot0027.jpg","mpv-shot0028.jpg","mpv-shot0029.jpg","mpv-shot0030.jpg","mpv-shot0031.jpg","mpv-shot0032.jpg","mpv-shot0033.jpg","mpv-shot0034.jpg","mpv-shot0035.jpg"]
        section.slide.bg-inspirational
            figure
                image.cover(src="./images/scrots2/" + jpg)


    section.slide
      h2 Table of contents
      ol
        li Context and Motivation
        li Demo
        li #[strong Implementation]
        li Conclusion and Future Work

    section.slide
      h2 What is the Semantic Web Language Server (SWLS)?
      ul
        li #[strong Language Server] implementation in Rust (Bevy ECS-based)
        li Supports #[strong Turtle], JSON-LD, and SPARQL
        li #[strong Features:] completion, diagnostics, highlighting, formatting, hover

    section.slide
      h2 Language Server Protocol
      ul
        li Standard #[strong JSON-RPC] protocol.
        li Reduces integration complexity: #[em #[strong O(M×N)]] becomes #[em #[strong  O(M+N)]].
        li #[strong Cross-editor] language support (VSCode, NeoVim, Jetbrains, etc.).
      div.image-row
        img(src="https://upload.wikimedia.org/wikipedia/commons/9/9a/Visual_Studio_Code_1.35_icon.svg")
        img(src="https://upload.wikimedia.org/wikipedia/commons/3/3a/Neovim-mark.svg")
        img(src="https://upload.wikimedia.org/wikipedia/en/0/08/JetBrains_beam_logo.svg")

    section.slide
      h2 Entity Component System (ECS)
      //p Originally created to handle data management in games, following composition over inheritance, all data is present in the #[em world]
      ul
        li #[strong Entities:] bundles of components, here documents in the editor
        li #[strong Components:] objects part of an entity
        li #[strong Systems:] functions that acts on entities with the desired components
        //li #[strong Resources:] static data linked to the #[em world]
      //p Different systems are bundled in #[em schedules].

    section.slide
      h2 Entity Component System (ECS)
      p #[strong Originally] created to handle data management in #[strong games], following composition over inheritance, all data is present in the #[em world]
      p In a game an entity might be the #[strong protagonist], or #[strong enemies], or #[strong buildings], or ...
      p A system might be #[strong gravity], which works over all entities with a #[strong mass] and a #[strong velocity].


    section.slide
      h2 File #[em index.ttl]
      pre
        code(class="language-turtle").
          @prefix foaf: &lt;http://xmlns.com/foaf/0.1/>.
          <#you> a foaf:Person;
            foaf:knows [
              foaf:name "Arthur";
              foaf:lastName "Vercruysse";
            ].

    section.slide
      h2 Entity Component System (ECS)
      .entities 
        .entity
          header index.ttl
          .component.bold.next Source Code
          .component.bold.next TurtleLang


    section.slide
      h2 Parse Systems
      .row 
        .system
          header.correct Parse Turtle
          section Parses the Turtle source code
          section.input
            span Source Code
            br
            span.bold.correct Turtle Lang
          section.output
            span Triples
            br
            span Prefixes
        .system
          header Parse JSON-LD
          section Parses the JSON-LD source code
          section.input
            span Source Code
            br
            span.bold.faulty JSON-LD Lang
          section.output
            span Triples
            br
            span Prefixes

    section.slide
      h2 Entity Component System (ECS)
      .entities 
        .entity
          header index.ttl
          .component Source Code
          .component TurtleLang
          .component.bold.next Triples
          .component.bold.next Prefixes

    section.slide
      h2 Other Systems
      .row 
        .system
          header LOV services
          section Fetch ontologies from LOV according to the defined prefixes. #[br] Adds these documents to the ECS.
          section.input
            span Prefixes
          section.output
        .system
          header Derive Classes
          section Extracts #[code owl:Class] objects. #[br] Extracts #[code owl:Property] objects.
          section.input
            span Triples
          section.output
            span Derived Classes
            br
            span Derived Properties

    section.slide
      h2 File #[em index.ttl]
      pre
        code(class="language-turtle").
          @prefix foaf: &lt;http://xmlns.com/foaf/0.1/>.
          <#you> a foaf:Person;
            foaf:knows [
              foaf:name "Arthur";
              foaf:lastName "Vercruysse";
            ].

    section.slide
      h2 Entity Component System (ECS)
      .entities 
        .entity
          header index.ttl
          .component Source Code
          .component TurtleLang
          .component Triples
          .component Prefixes
        .entity.next
          header foaf.ttl
          .component.next Source Code
          .component.next TurtleLang
          .component.next Triples
          .component.next Prefixes
          .component.bold.next Derived Classes
          .component.bold.next Derived Properties

    section.slide
      h2 Entity Component System (ECS)
      p 
        | Other operations like autocompletion work the same way.
        br
        | Multiple small systems find their required data and transform that into the expected data structure.
      p #[strong Autocompletion] is powered by things like the #[strong defined classes] and #[strong properties] from linked entities but also by other services like prefix.cc

    section.slide
      h2 Table of contents
      ol
        li Context and Motivation
        li Demo
        li Implementation
        li #[strong Conclusion and Future Work]

    section.slide
      h2 Conclusion
      ul
        li SWLS improves on the state of the art by
          ol
            li being langauge agnostic
            li enabling local integration
        li Adding a language is as simple as adding a tokenizer and a parser


    section.slide
      h2 Future Work
      ul
        li Better SPARQL support
        li Support local ontology files
        li Project configurable SHACL shapes
        li ...
        li.next
          | Accept Pull Requests and interact with the community
          .bottom.right.column
            span Github
            span.smaller github.com/ajuvercr/semantic-web-lsp
            include ./images/qr/github.svg

    section.slide
        h2 Thank You!
        .right.column
            span Slides
            image(src="./images/qr/slides.png")

        div Github: #[a(href="https://github.com/ajuvercr/semantic-web-lsp") ajuvercr:semantic-web-lsp]
        div VSCode extension: #[a(href="https://marketplace.visualstudio.com/items?itemName=ajuvercr.semantic-web-lsp") semantic web lsp]
        .footer
            a(href="#").author.inline
                | Arthur Vercruysse -
                | Julián Rojas Meléndez -
                | Pieter Colpaert
            p.affiliation
                a(href="https://idlab.technology/") Ghent University - imec - IDLab, Belgium


    script(src="node_modules/@shower/core/dist/shower.js")
    script(src="./prism.js")
